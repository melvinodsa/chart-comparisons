{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","data","strike","call_oi","put_oi","callOI","_","map","item","putOI","strikes","createSeries","chart","field","name","series","push","am4charts","dataFields","valueY","categoryX","columns","template","tooltipText","height","sequencedInterpolation","valueLabel","bullets","label","text","horizontalCenter","dy","hideOversized","truncate","App","this","amchart","JSON","parse","stringify","categoryAxis","xAxes","category","title","yAxes","colors","list","legend","position","titles","create","createAmCharts","plotly","plotlyData","type","x","y","plotlyOldData","yMaxs","chain","d","max","value","yMax","yMins","min","range","layout","width","document","body","offsetWidth","colorway","yaxis","autorange","fixedrange","xaxis","tickformat","standoff","orientation","Plotly","newPlot","animate","transition","duration","easing","frame","createPlotly","highcharts","Highcharts","xAxis","categories","crosshair","plotOptions","column","pointPadding","borderWidth","color","dispose","Fragment","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4SAWAA,IAAiBC,KAEjB,IAAMC,EAAO,CACX,CACEC,OAAQ,KACRC,QAAS,MACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,KACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,KACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,OAEV,CACEF,OAAQ,IACRC,QAAS,MACTC,OAAQ,MAEV,CACEF,OAAQ,KACRC,QAAS,KACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,KACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,MAEV,CACEF,OAAQ,KACRC,QAAS,KACTC,OAAQ,KAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,MAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,IAEV,CACEF,OAAQ,KACRC,QAAS,IACTC,OAAQ,OAEV,CACEF,OAAQ,KACRC,QAAS,MACTC,OAAQ,QAINC,EAASC,IAAEC,IAAIN,GAAM,SAACO,GAAD,OAAUA,EAAKL,WACpCM,EAAQH,IAAEC,IAAIN,GAAM,SAACO,GAAD,OAAUA,EAAKJ,UACnCM,EAAUJ,IAAEC,IAAIN,GAAM,SAACO,GAAD,OAAUA,EAAKN,UAgL3C,SAASS,EAAaC,EAAOC,EAAOC,GAClC,IAAIC,EAASH,EAAMG,OAAOC,KAAK,IAAIC,KACnCF,EAAOG,WAAWC,OAASN,EAC3BE,EAAOG,WAAWE,UAAY,SAC9BL,EAAOD,KAAOA,EACdC,EAAOM,QAAQC,SAASC,YAAc,4BACtCR,EAAOM,QAAQC,SAASE,OAASzB,IAAgB,KACjDgB,EAAOU,wBAAyB,EAEhC,IAAIC,EAAaX,EAAOY,QAAQX,KAAK,IAAIC,KACzCS,EAAWE,MAAMC,KAAO,WACxBH,EAAWE,MAAME,iBAAmB,OACpCJ,EAAWE,MAAMG,GAAK,GACtBL,EAAWE,MAAMI,eAAgB,EACjCN,EAAWE,MAAMK,UAAW,EAGfC,M,kLAvCXC,KAAKC,QAtJT,WACE,IAAIxB,EAAQb,IAAe,UAAWkB,KAEtCL,EAAMX,KAAOoC,KAAKC,MAAMD,KAAKE,UAAUtC,IAEvC,IAAIuC,EAAe5B,EAAM6B,MAAMzB,KAAK,IAAIC,KAaxC,OAZAuB,EAAatB,WAAWwB,SAAW,SACnCF,EAAaG,MAAMd,KAAO,UAC1BjB,EAAMgC,MAAM5B,KAAK,IAAIC,KACrBL,EAAMiC,OAAOC,KAAO,CAAC/C,IAZL,WAY+BA,IAXhC,YAYfY,EAAaC,EAAO,UAAW,WAC/BD,EAAaC,EAAO,SAAU,UAC9BA,EAAMmC,OAAS,IAAI9B,IACnBL,EAAMmC,OAAOC,SAAW,SAEZpC,EAAMqC,OAAOC,SACnBrB,KAAO,YAENjB,EAoIUuC,GACfhB,KAAKiB,OAlIT,WACE,IAAMC,EAAa,CACjB,CACEC,KAAM,MACNC,EAAG7C,EACH8C,EAAGnD,EACHS,KAAM,WAER,CACEwC,KAAM,MACNC,EAAG7C,EACH8C,EAAG/C,EACHK,KAAM,WAIJ2C,EAAgB,CACpB,CACEH,KAAM,MACNC,EAAG7C,EACH8C,EAAGlD,IAAEC,IAAIN,GAAM,SAACO,GAAD,OAAU,KACzBM,KAAM,WAER,CACEwC,KAAM,MACNC,EAAG7C,EACH8C,EAAGlD,IAAEC,IAAIN,GAAM,SAACO,GAAD,OAAU,KACzBM,KAAM,WAIJ4C,EAAQ,CACZpD,IAAEqD,MAAM1D,GACLM,KAAI,SAACqD,GAAD,OAAOA,EAAEzD,WACb0D,MACAC,QACHxD,IAAEqD,MAAM1D,GACLM,KAAI,SAACqD,GAAD,OAAOA,EAAExD,UACbyD,MACAC,SAECC,EAAOL,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAC9CM,EAAQ,CACZ1D,IAAEqD,MAAM1D,GACLM,KAAI,SAACqD,GAAD,OAAOA,EAAEzD,WACb8D,MACAH,QAAU,EACbxD,IAAEqD,MAAM1D,GACLM,KAAI,SAACqD,GAAD,OAAOA,EAAExD,UACb6D,MACAH,QAAU,GAGTI,EAAQ,CADDF,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAC/BD,GAEfI,EAAS,CACbC,MAAOC,SAASC,KAAKC,YACrB/C,OAAQ,IACRmB,MAAO,SACP6B,SAAU,CAnFI,UACD,WAmFbC,MAAO,CACLC,WAAW,EACXC,YAAY,EACZT,SAEFU,MAAO,CACLC,WAAY,OACZlC,MAAO,CACLd,KAAM,UACNiD,SAAU,KAGd/B,OAAQ,CAAEgC,YAAa,IAAKxB,EAAG,MAGjCyB,IAAOC,QAAQ,SAAUxB,EAAeU,GACxCa,IAAOE,QACL,SACA,CACEjF,KAAMoD,EACNc,OAAQ,IAEV,CACEgB,WAAY,CACVC,SAAU,IACVC,OAAQ,gBAEVC,MAAO,CACLF,SAAU,OA0CAG,GACdpD,KAAKqD,gBApCPC,IAAW7E,MAAM,aAAc,CAC7BA,MAAO,CACL0C,KAAM,UAERX,MAAO,CACLd,KAAM,eAER6D,MAAO,CACLC,WAAYjF,EACZkF,WAAW,GAEbC,YAAa,CACXC,OAAQ,CACNC,aAAc,GACdC,YAAa,IAGjBjF,OAAQ,CACN,CACED,KAAM,UACNb,KAAMI,EACN4F,MA5IU,WA8IZ,CACEnF,KAAM,SACNb,KAAMQ,EACNwF,MAhJS,gB,6CA8JT9D,KAAKC,SACPD,KAAKC,QAAQ8D,Y,+BAKf,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,GAAG,YACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,oB,GAlBEC,aClQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxC,SAASyC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c31b1def.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport Plotly from \"plotly.js\";\nimport Highcharts, { charts } from \"highcharts\";\nimport _ from \"lodash\";\n\n// import createPlotlyComponent from \"react-plotly.js/factory\";\n// const Plot = createPlotlyComponent(Plotly);\n\nam4core.useTheme(am4themes_animated);\n\nconst data = [\n  {\n    strike: 8800,\n    call_oi: 10050,\n    put_oi: 800000,\n  },\n  {\n    strike: 8850,\n    call_oi: 1050,\n    put_oi: 38250,\n  },\n  {\n    strike: 8900,\n    call_oi: 8700,\n    put_oi: 600000,\n  },\n  {\n    strike: 8950,\n    call_oi: 525,\n    put_oi: 62250,\n  },\n  {\n    strike: 9000,\n    call_oi: 76425,\n    put_oi: 1200000,\n  },\n  {\n    strike: 9050,\n    call_oi: 4200,\n    put_oi: 46275,\n  },\n  {\n    strike: 9100,\n    call_oi: 90375,\n    put_oi: 500000,\n  },\n  {\n    strike: 9150,\n    call_oi: 11850,\n    put_oi: 53775,\n  },\n  {\n    strike: 9200,\n    call_oi: 600000,\n    put_oi: 700000,\n  },\n  {\n    strike: 9250,\n    call_oi: 72825,\n    put_oi: 70350,\n  },\n  {\n    strike: 9300,\n    call_oi: 700000,\n    put_oi: 500000,\n  },\n  {\n    strike: 9350,\n    call_oi: 200000,\n    put_oi: 42600,\n  },\n  {\n    strike: 9400,\n    call_oi: 1100000,\n    put_oi: 200000,\n  },\n  {\n    strike: 9450,\n    call_oi: 83100,\n    put_oi: 5700,\n  },\n  {\n    strike: 9500,\n    call_oi: 1700000,\n    put_oi: 400000,\n  },\n  {\n    strike: 9550,\n    call_oi: 54450,\n    put_oi: 1650,\n  },\n  {\n    strike: 9600,\n    call_oi: 600000,\n    put_oi: 20850,\n  },\n  {\n    strike: 9650,\n    call_oi: 78675,\n    put_oi: 75,\n  },\n  {\n    strike: 9700,\n    call_oi: 800000,\n    put_oi: 24075,\n  },\n  {\n    strike: 9750,\n    call_oi: 83775,\n    put_oi: 42600,\n  },\n];\n\nconst callOI = _.map(data, (item) => item.call_oi);\nconst putOI = _.map(data, (item) => item.put_oi);\nconst strikes = _.map(data, (item) => item.strike);\nconst callColor = \"#0fd190\";\nconst putColor = \"#ff3f38\";\n\nfunction createAmCharts() {\n  let chart = am4core.create(\"amchart\", am4charts.XYChart);\n\n  chart.data = JSON.parse(JSON.stringify(data));\n\n  let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n  categoryAxis.dataFields.category = \"strike\";\n  categoryAxis.title.text = \"Strikes\";\n  chart.yAxes.push(new am4charts.ValueAxis());\n  chart.colors.list = [am4core.color(callColor), am4core.color(putColor)];\n  createSeries(chart, \"call_oi\", \"Call OI\");\n  createSeries(chart, \"put_oi\", \"Put OI\");\n  chart.legend = new am4charts.Legend();\n  chart.legend.position = \"bottom\";\n\n  var title = chart.titles.create();\n  title.text = \"AM Charts\";\n\n  return chart;\n}\n\nfunction createPlotly() {\n  const plotlyData = [\n    {\n      type: \"bar\",\n      x: strikes,\n      y: callOI,\n      name: \"Call OI\",\n    },\n    {\n      type: \"bar\",\n      x: strikes,\n      y: putOI,\n      name: \"Put OI\",\n    },\n  ];\n\n  const plotlyOldData = [\n    {\n      type: \"bar\",\n      x: strikes,\n      y: _.map(data, (item) => 0),\n      name: \"Call OI\",\n    },\n    {\n      type: \"bar\",\n      x: strikes,\n      y: _.map(data, (item) => 0),\n      name: \"Put OI\",\n    },\n  ];\n\n  const yMaxs = [\n    _.chain(data)\n      .map((d) => d.call_oi)\n      .max()\n      .value(),\n    _.chain(data)\n      .map((d) => d.put_oi)\n      .max()\n      .value(),\n  ];\n  const yMax = yMaxs[0] > yMaxs[1] ? yMaxs[0] : yMaxs[1];\n  const yMins = [\n    _.chain(data)\n      .map((d) => d.call_oi)\n      .min()\n      .value() / 3,\n    _.chain(data)\n      .map((d) => d.put_oi)\n      .min()\n      .value() / 3,\n  ];\n  const yMin = yMins[0] > yMins[1] ? yMins[1] : yMins[0];\n  const range = [yMin, yMax];\n\n  const layout = {\n    width: document.body.offsetWidth,\n    height: 350,\n    title: \"Plotly\",\n    colorway: [callColor, putColor],\n    yaxis: {\n      autorange: false,\n      fixedrange: true,\n      range,\n    },\n    xaxis: {\n      tickformat: \":.3s\",\n      title: {\n        text: \"Strikes\",\n        standoff: 40,\n      },\n    },\n    legend: { orientation: \"h\", x: 0.45 },\n  };\n\n  Plotly.newPlot(\"plotly\", plotlyOldData, layout);\n  Plotly.animate(\n    \"plotly\",\n    {\n      data: plotlyData,\n      layout: {},\n    },\n    {\n      transition: {\n        duration: 2000,\n        easing: \"cubic-in-out\",\n      },\n      frame: {\n        duration: 2000,\n      },\n    }\n  );\n}\n\nfunction createHighCharts() {\n  Highcharts.chart(\"highcharts\", {\n    chart: {\n      type: \"column\",\n    },\n    title: {\n      text: \"High Charts\",\n    },\n    xAxis: {\n      categories: strikes,\n      crosshair: true,\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: \"Call OI\",\n        data: callOI,\n        color: callColor,\n      },\n      {\n        name: \"Put OI\",\n        data: putOI,\n        color: putColor,\n      },\n    ],\n  });\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.amchart = createAmCharts();\n    this.plotly = createPlotly();\n    this.highcharts = createHighCharts();\n  }\n\n  componentWillUnmount() {\n    if (this.amchart) {\n      this.amchart.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"amchart\"></div>\n        <div id=\"plotly\"></div>\n        <div id=\"highcharts\"></div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction createSeries(chart, field, name) {\n  let series = chart.series.push(new am4charts.ColumnSeries());\n  series.dataFields.valueY = field;\n  series.dataFields.categoryX = \"strike\";\n  series.name = name;\n  series.columns.template.tooltipText = \"{name}: [bold]{valueX}[/]\";\n  series.columns.template.height = am4core.percent(100);\n  series.sequencedInterpolation = true;\n\n  let valueLabel = series.bullets.push(new am4charts.LabelBullet());\n  valueLabel.label.text = \"{valueX}\";\n  valueLabel.label.horizontalCenter = \"left\";\n  valueLabel.label.dy = 10;\n  valueLabel.label.hideOversized = false;\n  valueLabel.label.truncate = false;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}